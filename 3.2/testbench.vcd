$date
  Wed Nov  2 13:38:15 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module rca_tb $end
$var reg 8 ! a[7:0] $end
$var reg 8 " b[7:0] $end
$var reg 1 # cin $end
$var reg 1 $ cout $end
$var reg 8 % sum[7:0] $end
$scope module ripple_carry $end
$var reg 8 & a[7:0] $end
$var reg 8 ' b[7:0] $end
$var reg 1 ( cin $end
$var reg 1 ) cout $end
$var reg 8 * sum[7:0] $end
$var reg 1 + wire_1 $end
$var reg 1 , wire_2 $end
$var reg 1 - wire_3 $end
$var reg 1 . wire_4 $end
$var reg 1 / wire_5 $end
$var reg 1 0 wire_6 $end
$var reg 1 1 wire_7 $end
$scope module add0 $end
$var reg 1 2 a $end
$var reg 1 3 b $end
$var reg 1 4 cin $end
$var reg 1 5 cout $end
$var reg 1 6 sum $end
$var reg 1 7 wire_1 $end
$var reg 1 8 wire_2 $end
$var reg 1 9 wire_3 $end
$upscope $end
$scope module add1 $end
$var reg 1 : a $end
$var reg 1 ; b $end
$var reg 1 < cin $end
$var reg 1 = cout $end
$var reg 1 > sum $end
$var reg 1 ? wire_1 $end
$var reg 1 @ wire_2 $end
$var reg 1 A wire_3 $end
$upscope $end
$scope module add2 $end
$var reg 1 B a $end
$var reg 1 C b $end
$var reg 1 D cin $end
$var reg 1 E cout $end
$var reg 1 F sum $end
$var reg 1 G wire_1 $end
$var reg 1 H wire_2 $end
$var reg 1 I wire_3 $end
$upscope $end
$scope module add3 $end
$var reg 1 J a $end
$var reg 1 K b $end
$var reg 1 L cin $end
$var reg 1 M cout $end
$var reg 1 N sum $end
$var reg 1 O wire_1 $end
$var reg 1 P wire_2 $end
$var reg 1 Q wire_3 $end
$upscope $end
$scope module add4 $end
$var reg 1 R a $end
$var reg 1 S b $end
$var reg 1 T cin $end
$var reg 1 U cout $end
$var reg 1 V sum $end
$var reg 1 W wire_1 $end
$var reg 1 X wire_2 $end
$var reg 1 Y wire_3 $end
$upscope $end
$scope module add5 $end
$var reg 1 Z a $end
$var reg 1 [ b $end
$var reg 1 \ cin $end
$var reg 1 ] cout $end
$var reg 1 ^ sum $end
$var reg 1 _ wire_1 $end
$var reg 1 ` wire_2 $end
$var reg 1 a wire_3 $end
$upscope $end
$scope module add6 $end
$var reg 1 b a $end
$var reg 1 c b $end
$var reg 1 d cin $end
$var reg 1 e cout $end
$var reg 1 f sum $end
$var reg 1 g wire_1 $end
$var reg 1 h wire_2 $end
$var reg 1 i wire_3 $end
$upscope $end
$scope module add7 $end
$var reg 1 j a $end
$var reg 1 k b $end
$var reg 1 l cin $end
$var reg 1 m cout $end
$var reg 1 n sum $end
$var reg 1 o wire_1 $end
$var reg 1 p wire_2 $end
$var reg 1 q wire_3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000 !
b00000001 "
0#
0$
b00000001 %
b00000000 &
b00000001 '
0(
0)
b00000001 *
0+
0,
0-
0.
0/
00
01
02
13
04
05
16
U7
U8
U9
0:
0;
0<
0=
0>
U?
U@
UA
0B
0C
0D
0E
0F
UG
UH
UI
0J
0K
0L
0M
0N
UO
UP
UQ
0R
0S
0T
0U
0V
UW
UX
UY
0Z
0[
0\
0]
0^
U_
U`
Ua
0b
0c
0d
0e
0f
Ug
Uh
Ui
0j
0k
0l
0m
0n
Uo
Up
Uq
#10000000
b00000000 "
b00000000 %
b00000000 '
b00000000 *
03
06
#20000000
b00000001 !
b00000001 "
b00000010 %
b00000001 &
b00000001 '
b00000010 *
1+
12
13
15
1<
1>
#30000000
b01111111 !
b01111111 "
X$
b11111110 %
b01111111 &
b01111111 '
X)
b11111110 *
1,
1-
1.
1/
10
11
1:
1;
1=
1B
1C
1D
1E
1F
1J
1K
1L
1M
1N
1R
1S
1T
1U
1V
1Z
1[
1\
1]
1^
1b
1c
1d
1e
1f
1l
Xm
1n
#40000000
