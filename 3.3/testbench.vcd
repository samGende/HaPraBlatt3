$date
  Thu Nov  3 18:09:14 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module cla $end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 1 # cin $end
$var reg 1 $ cout $end
$var reg 4 % sum[3:0] $end
$var reg 4 & g[3:0] $end
$var reg 4 ' p[3:0] $end
$var reg 4 ( c_out[3:0] $end
$scope module falca0 $end
$var reg 1 ) a $end
$var reg 1 * b $end
$var reg 1 + cin $end
$var reg 1 , g $end
$var reg 1 - p $end
$var reg 1 . sum $end
$upscope $end
$scope module falca1 $end
$var reg 1 / a $end
$var reg 1 0 b $end
$var reg 1 1 cin $end
$var reg 1 2 g $end
$var reg 1 3 p $end
$var reg 1 4 sum $end
$upscope $end
$scope module falca2 $end
$var reg 1 5 a $end
$var reg 1 6 b $end
$var reg 1 7 cin $end
$var reg 1 8 g $end
$var reg 1 9 p $end
$var reg 1 : sum $end
$upscope $end
$scope module falca3 $end
$var reg 1 ; a $end
$var reg 1 < b $end
$var reg 1 = cin $end
$var reg 1 > g $end
$var reg 1 ? p $end
$var reg 1 @ sum $end
$upscope $end
$scope module carry_generator $end
$var reg 4 A gin[3:0] $end
$var reg 4 B pin[3:0] $end
$var reg 1 C cin $end
$var reg 4 D cout[3:0] $end
$var reg 1 E pout $end
$var reg 1 F gout $end
$var reg 1 G wire_0 $end
$var reg 1 H wire_1 $end
$var reg 1 I wire_2 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
bUUUU !
bUUUU "
U#
U$
bUUUU %
bUUUU &
bUUUU '
bUUUU (
U)
U*
U+
U,
U-
U.
U/
U0
U1
U2
U3
U4
U5
U6
U7
U8
U9
U:
U;
U<
U=
U>
U?
U@
bUUUU A
bUUUU B
UC
bUUUU D
UE
UF
UG
UH
UI
